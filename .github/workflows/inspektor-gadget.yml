name: Compile inspektor-gadget
on:
  push:
  schedule:
    - cron: '0 2 * * *' # Night builds at 02:00

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code
      uses: actions/checkout@v1

    - name: Build binaries for the gadget container image
      run: |
        make gadget-container-deps

    - name: Build gadget container and publish to Registry
      id: publish-registry
      uses: elgohr/Publish-Docker-Github-Action@2.8
      with:
        name: docker.io/kinvolk/gadget
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: gadget-ds
        dockerfile: gadget.Dockerfile
        snapshot: true
        cache: ${{ github.event_name != 'schedule' }}

    - name: Build inspektor-gadget
      run: |
        TAG=$(git describe --tags --always)
        CHANGES=$(git status --porcelain)
        if [ "$CHANGES" = "" ] ; then
          VERSION="$TAG"
        else
          VERSION="$TAG"-dirty
        fi

        LDFLAGS1="-X github.com/kinvolk/inspektor-gadget/cmd/inspektor-gadget/cmd.version=${VERSION}"
        LDFLAGS2="-X github.com/kinvolk/inspektor-gadget/cmd/inspektor-gadget/cmd.gadgetimage=docker.io/kinvolk/gadget:${{steps.publish-registry.outputs.snapshot-tag}}"
        LDFLAGS3="-extldflags '-static'"

        mkdir -p out/inspektor-gadget
        GO111MODULE=on CGO_ENABLED=0 GOOS=linux go build \
            -ldflags "$LDFLAGS1 $LDFLAGS2 $LDFLAGS3" \
            -o out/inspektor-gadget/inspektor-gadget \
            github.com/kinvolk/inspektor-gadget/cmd/inspektor-gadget

        tar --sort=name --owner=root:0 --group=root:0 -czf inspektor-gadget.tar.gz -C out .

    - name: Unit tests
      run: |
        make test

    - name: Upload inspektor-gadget artifact
      uses: actions/upload-artifact@v1
      with:
        name: inspektor-gadget.zip
        path: out/inspektor-gadget/inspektor-gadget

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: inspektor-gadget.tar.gz
        asset_name: inspektor-gadget.tar.gz
        asset_content_type: application/gzip
